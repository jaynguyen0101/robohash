{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAGaA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,sBAAKC,UAAU,iBAAf,UACC,qBACCC,IAAG,+BAA0BF,EAAQG,GAAlC,0BACHC,IAAI,YAEL,mCAAMJ,EAAQK,KAAd,OACA,kCAAKL,EAAQM,MAAb,WCJWC,G,MAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OACC,qBAAKP,UAAU,YAAf,SACEO,EAASC,KAAI,SAAAT,GAAO,OACpB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,WCNVO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACxB,uBACCX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoCGG,E,kDAvCd,aAAe,IAAD,8BACb,gBAQDH,aAAe,SAAAI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAPtC,EAAKC,MAAQ,CACZb,SAAU,GACVU,YAAa,IALD,E,qDAad,WAAqB,IAAD,OACnBI,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,oBAG3C,WAAU,IAAD,EAC0BC,KAAKN,MAA/Bb,EADA,EACAA,SAAUU,EADV,EACUA,YAEZU,EAAmBpB,EAASqB,QAAO,SAAA7B,GAAO,OAC/CA,EAAQK,KAAKyB,cAAcC,SAASb,EAAYY,kBAGjD,OACC,sBAAK7B,UAAU,MAAf,UACC,iDACA,cAAC,EAAD,CACCU,YAAY,kBACZC,aAAce,KAAKf,eAEpB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAlCNI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBZ,M","file":"static/js/main.f77b7b83.chunk.js","sourcesContent":["import { React } from 'react';\nimport './card.styles.css';\n\nexport const Card = ({ monster }) => (\n\t<div className='card-container'>\n\t\t<img\n\t\t\tsrc={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\n\t\t\talt='monster'\n\t\t/>\n\t\t<h2> {monster.name} </h2>\n\t\t<p> {monster.email} </p>\n\t</div>\n);\n","import { React } from 'react';\n\nimport { Card } from '../card/card.component';\n\nimport './card-list.styles.css';\n\nexport const CardList = ({ monsters }) => {\n\treturn (\n\t\t<div className='card-list'>\n\t\t\t{monsters.map(monster => (\n\t\t\t\t<Card key={monster.id} monster={monster} />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n","import { React } from 'react';\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n\t<input\n\t\tclassName='search'\n\t\ttype='search'\n\t\tplaceholder={placeholder}\n\t\tonChange={handleChange}\n\t/>\n);\n","import './App.css';\nimport React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: ''\n\t\t};\n\t}\n\n\thandleChange = e => {\n\t\tthis.setState({ searchField: e.target.value });\n\t};\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => this.setState({ monsters: users }));\n\t}\n\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\n\t\tconst filteredMonsters = monsters.filter(monster =>\n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t);\n\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<h1>Monster Rolodex</h1>\n\t\t\t\t<SearchBox\n\t\t\t\t\tplaceholder='search monsters'\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<CardList monsters={filteredMonsters} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}